---
import { getLangFromUrl, useTranslations } from '@i18n/utils';

interface Props {
  post: {
    slug: string;
    title: string;
    description: string;
    publishDate: string;
    author: string;
    image?: string;
    tags?: string[];
  };
}

const { post } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// 格式化日期
const formatDate = (dateString: string) => {
  const date = new Date(dateString);
  return new Intl.DateTimeFormat(lang === 'en' ? 'en-US' : lang === 'es' ? 'es-ES' : lang === 'fr' ? 'fr-FR' : 'zh-CN', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
};
---

<article class="bg-dark-800 rounded-lg border border-dark-700 overflow-hidden hover:border-dark-600 transition-colors duration-200">
  {post.image && (
    <div class="aspect-video overflow-hidden">
      <img 
        src={post.image} 
        alt={post.title} 
        class="w-full h-full object-cover transition-transform duration-300 hover:scale-105"
      />
    </div>
  )}
  <div class="p-6">
    <h3 class="text-xl font-semibold mb-2">
      <a href={lang === 'en' ? `/blog/${post.slug}` : `/${lang}/blog/${post.slug}`} class="text-dark-50 hover:text-indigo-400">
        {post.title}
      </a>
    </h3>
    <div class="flex items-center text-dark-400 text-sm mb-3">
      <span>{t('blog.publishedOn')} {formatDate(post.publishDate)}</span>
      {post.author && (
        <>
          <span class="mx-2">•</span>
          <span>{t('blog.author')}: {post.author}</span>
        </>
      )}
    </div>
    <p class="text-dark-300 mb-4">{post.description}</p>
    {post.tags && post.tags.length > 0 && (
      <div class="flex flex-wrap gap-2 mb-4">
        {post.tags.map(tag => (
          <span class="bg-dark-700 text-dark-300 text-xs px-2 py-1 rounded">
            {tag}
          </span>
        ))}
      </div>
    )}
    <a 
      href={lang === 'en' ? `/blog/${post.slug}` : `/${lang}/blog/${post.slug}`}
      class="text-indigo-400 hover:text-indigo-300 font-medium inline-flex items-center"
    >
      {t('blog.readMore')}
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
      </svg>
    </a>
  </div>
</article>
