---
import Layout from '@layouts/Layout.astro';
import { getLangFromUrl, useTranslations } from '@i18n/utils';
import ToolCard from '@components/ToolCard.astro';

export function getStaticPaths() {
  return [
    { params: { lang: undefined } },
    { params: { lang: 'es' } },
    { params: { lang: 'fr' } },
    { params: { lang: 'zh' } }
  ];
}

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// 使用import.meta.glob静态导入所有语言的工具文件
const enToolsModules = import.meta.glob('@content/tools/en/*.md', { eager: true });
const esToolsModules = import.meta.glob('@content/tools/es/*.md', { eager: true });
const frToolsModules = import.meta.glob('@content/tools/fr/*.md', { eager: true });
const zhToolsModules = import.meta.glob('@content/tools/zh/*.md', { eager: true });

// 将模块转换为工具数组
const enTools = Object.values(enToolsModules);
const esTools = Object.values(esToolsModules);
const frTools = Object.values(frToolsModules);
const zhTools = Object.values(zhToolsModules);

// 创建语言到工具数组的映射
const langToolsMap = {
  en: enTools,
  es: esTools,
  fr: frTools,
  zh: zhTools
};

// 获取当前语言的工具文件
let toolFiles = langToolsMap[lang] || enTools;

const allTools = toolFiles.map(tool => ({
  id: tool.frontmatter.id,
  name: tool.frontmatter.name,
  description: tool.frontmatter.description,
  category: tool.frontmatter.category,
  rating: tool.frontmatter.rating,
  reviews: tool.frontmatter.reviews,
  website: tool.frontmatter.website,
  icon: tool.frontmatter.icon
}));
---

<Layout
  title={`${t('nav.tools')} - ${t('site.title')}`}
  description={t('site.description')}
>
  <div class="max-w-7xl mx-auto">
    <nav class="text-sm mb-6">
      <ol class="flex items-center space-x-2">
        <li>
          <a href={`/${lang === 'en' ? '' : lang}`} class="text-gray-500 hover:text-indigo-600">
            {t('nav.home')}
          </a>
        </li>
        <li class="text-gray-500">/</li>
        <li class="text-gray-900">{t('nav.tools')}</li>
      </ol>
    </nav>

    <h1 class="text-4xl font-bold mb-8">
      {t('nav.tools')}
    </h1>

    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 md:gap-6">
      {allTools.map(tool => (
        <ToolCard tool={tool} />
      ))}
    </div>
  </div>
</Layout>
